% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nocodb.gen.R
\name{sign_up_user}
\alias{sign_up_user}
\title{Sign up NocoDB user}
\usage{
sign_up_user(
  user_email,
  user_password,
  invite_token = NULL,
  subscribe_to_newsletter = FALSE,
  hostname = pal::pkg_config_val(key = "hostname", pkg = this_pkg),
  email = pal::pkg_config_val(key = "email", pkg = this_pkg, required = FALSE),
  password = pal::pkg_config_val(key = "password", pkg = this_pkg, required = FALSE),
  api_token = pal::pkg_config_val(key = "api_token", pkg = this_pkg, required = FALSE)
)
}
\arguments{
\item{user_email}{E-mail address of the user to sign up. A character scalar.}

\item{user_password}{Password of the user to sign up. A character scalar.}

\item{invite_token}{Invite token of the user to sign up. A character scalar.}

\item{subscribe_to_newsletter}{Whether or not to subscribe the signed up user to the NocoDB newsletter.}

\item{hostname}{NocoDB server \href{https://en.wikipedia.org/wiki/Hostname}{hostname}. A character scalar.}

\item{email}{E-mail address of the NocoDB user to authenticate with.}

\item{password}{Password of the NocoDB user to authenticate with.}

\item{api_token}{NocoDB \href{https://docs.nocodb.com/account-settings/api-tokens/}{API token}. Takes precedence over \code{email} and \code{password} if
provided.}
}
\value{
The generated access token for the signed up user as a character scalar, invisibly.
}
\description{
Signs up the specified user on a NocoDB server via its \href{https://data-apis-v1.nocodb.com/#tag/Auth/operation/auth-signup}{\code{POST /api/v1/auth/user/signup}} API
endpoint.

If sign-up is \href{https://docs.nocodb.com/account-settings/oss-specific-details/#enable--disable-signup}{restricted to invitees only}, the user must
have been invited before (via \code{\link[=invite_user]{invite_user()}} or \code{\link[=invite_base_user]{invite_base_user()}}) and an \code{invite_token} must be provided. Otherwise, the user is created straightaway.
}
\section{API errors}{
\itemize{
\item If you \emph{did} provide an \code{invite_token} and encounter a \strong{\verb{Not allowed to signup}} error, it means the provided \code{user_email} does not match the
\code{invite_token}.
\item If you did \emph{not} provide an \code{invite_token} and encounter a \strong{\verb{Not allowed to signup}} error, it means sign-up of new users is \href{https://docs.nocodb.com/account-settings/oss-specific-details/#enable--disable-signup}{restricted to invitees only}.
\item If you encounter an \strong{\verb{Invalid invite url}} error, it means the provided \code{invite_token} is either invalid or has already been used to sign up.
}
}

\seealso{
Other functions to manage NocoDB users:
\code{\link{add_user}()},
\code{\link{base_users}()},
\code{\link{delete_base_user}()},
\code{\link{delete_user}()},
\code{\link{invite_base_user}()},
\code{\link{invite_user}()},
\code{\link{resend_base_user_invitation}()},
\code{\link{update_base_user}()},
\code{\link{update_user}()},
\code{\link{user_id}()},
\code{\link{users}()},
\code{\link{validate_user_email}()},
\code{\link{whoami}()}

Other functions to manage NocoDB authentication:
\code{\link{api_tokens}()},
\code{\link{assert_super_admin}()},
\code{\link{is_signed_in}()},
\code{\link{is_super_admin}()},
\code{\link{refresh_sign_in}()},
\code{\link{req_auth}()},
\code{\link{sign_in}()},
\code{\link{sign_out}()}
}
\concept{auth}
\concept{users}
