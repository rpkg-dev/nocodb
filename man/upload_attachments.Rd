% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nocodb.gen.R
\name{upload_attachments}
\alias{upload_attachments}
\title{Upload NocoDB attachments}
\usage{
upload_attachments(
  paths,
  types = mime::guess_type(paths),
  names = NULL,
  upload_path = "r",
  origin = pal::pkg_config_val("origin"),
  email = pal::pkg_config_val("email"),
  password = pal::pkg_config_val("password"),
  api_token = pal::pkg_config_val("api_token"),
  max_tries = 5L,
  verbosity = NULL
)
}
\arguments{
\item{paths}{\code{\link[base:character]{character()}}\cr
Paths to the files to be uploaded.}

\item{types}{\code{\link[base:character]{character()}}\cr
\href{https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types}{Media type}(s) of the uploaded files. A character vector of the same length
as \code{paths}.}

\item{names}{\code{\link[base:character]{character()}}\cr
File names to assign to the uploaded files. A character vector of the same length as \code{paths} or \code{NULL}. If \code{NULL}, the original file names from \code{paths} are
used. Note that a random string like \verb{_NnW3C} is always appended to the resulting file name before its file type suffix, so \code{names = "some-pic.jpg"} will
result in a file name like \code{some-pic_NnW3C.jpg}, for example.}

\item{upload_path}{\code{\link[base:character]{character(1)}}\cr
Destination path to store the uploaded file(s) at. Always interpreted relative to the directory \verb{/nc/uploads/} (which \href{https://github.com/search?q=repo\%3Anocodb\%2Fnocodb+nc+uploads+language\%3ATypeScript&type=code&l=TypeScript}{is hardcoded in NocoDB's source code}). Note that the characters \code{.} and \verb{?}
are replaced with \verb{_} by the API.}

\item{origin}{\code{\link[base:character]{character(1)}}\cr
NocoDB server \href{https://developer.mozilla.org/docs/Glossary/Origin}{origin}.}

\item{email}{\code{\link[base:character]{character(1)}}\cr
E-mail address of the NocoDB user to authenticate with.}

\item{password}{\code{\link[base:character]{character(1)}}\cr
Password of the NocoDB user to authenticate with.}

\item{api_token}{\code{\link[base:character]{character(1)}}\cr
NocoDB \href{https://docs.nocodb.com/account-settings/api-tokens/}{API token}. Takes precedence over \code{email} and \code{password} if provided.}

\item{max_tries}{\code{\link[base:integer]{integer(1)}}\cr
Maximum number of request attempts in case of an HTTP error. An integerish scalar. Retries are performed using exponential backoff and jitter, see \code{\link[httr2:req_retry]{httr2::req_retry()}} for details.}

\item{verbosity}{How much information to print? This is a wrapper
around \code{\link[httr2:req_verbose]{req_verbose()}} that uses an integer to control verbosity:
\itemize{
\item \code{0}: no output
\item \code{1}: show headers
\item \code{2}: show headers and bodies
\item \code{3}: show headers, bodies, and curl status messages.
}

Use \code{\link[httr2:with_verbosity]{with_verbosity()}} to control the verbosity of requests that
you can't affect directly.}
}
\value{
A \link[tibble:tbl_df-class]{tibble} containing metadata about the uploaded attachments.
}
\description{
Uploads the specified files to a NocoDB server as \href{https://docs.nocodb.com/fields/field-types/custom-types/attachment/}{attachments} via its
\href{https://meta-apis-v2.nocodb.com/#tag/Storage}{\code{POST /api/v2/storage/upload}} API endpoint. Uploaded files are stored under \verb{/nc/uploads/} in the configured
object storage bucket (if one is set up) or directly on the server's filesystem.
}
\concept{attachments}
