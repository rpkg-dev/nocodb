% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nocodb.gen.R
\name{api}
\alias{api}
\title{Call NocoDB API}
\usage{
api(
  path,
  method = c("GET", "CONNECT", "DELETE", "HEAD", "OPTIONS", "PATCH", "POST", "PUT",
    "TRACE"),
  hostname = pal::pkg_config_val("hostname"),
  email = pal::pkg_config_val("email"),
  password = pal::pkg_config_val("password"),
  api_token = pal::pkg_config_val("api_token"),
  auth = TRUE,
  url_params = NULL,
  body_json = NULL,
  auto_unbox = TRUE,
  simplify = TRUE,
  flatten = TRUE,
  max_tries = 3L,
  verbosity = NULL
)
}
\arguments{
\item{path}{NocoDB API endpoint path. A character scalar.}

\item{method}{\href{https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods}{HTTP request method}. One of
\code{"GET"}, \code{"CONNECT"}, \code{"DELETE"}, \code{"HEAD"}, \code{"OPTIONS"}, \code{"PATCH"}, \code{"POST"}, \code{"PUT"} or \code{"TRACE"}.}

\item{hostname}{NocoDB server \href{https://en.wikipedia.org/wiki/Hostname}{hostname}. A character scalar.}

\item{email}{E-mail address of the NocoDB user to authenticate with.}

\item{password}{Password of the NocoDB user to authenticate with.}

\item{api_token}{NocoDB \href{https://docs.nocodb.com/account-settings/api-tokens/}{API token}. Takes precedence over \code{email} and \code{password} if
provided.}

\item{auth}{Whether or not to include an \link[=req_auth]{authentication header} in the HTTP request.}

\item{url_params}{URL parameters added to the \href{https://en.wikipedia.org/wiki/Query_string}{query string}. Either \code{NULL} to omit or a named list of key-value
pairs that define query parameters. Values must be a scalars, to opt out of escaping, wrap strings in \code{\link[=I]{I()}}.}

\item{body_json}{Data to include as JSON in the HTTP request body. Either a list or \code{NULL} for an empty body.}

\item{auto_unbox}{Whether or not to automatically "unbox" length-1 vectors in \code{body_json} to JSON scalars.}

\item{simplify}{Whether or not to automatically simplify JSON structures in the returned JSON. Enables/disables all \verb{simplify*} arguments of
\code{\link[jsonlite:fromJSON]{jsonlite::fromJSON()}}.}

\item{flatten}{Whether or not to automatically \link[jsonlite:flatten]{flatten} nested data frames in the returned JSON into a single non-nested data frame.}

\item{max_tries}{Maximum number of attempts to retry in case of an HTTP error. An integerish scalar.}

\item{verbosity}{How much information to print? This is a wrapper
around \code{\link[httr2:req_verbose]{req_verbose()}} that uses an integer to control verbosity:
\itemize{
\item \code{0}: no output
\item \code{1}: show headers
\item \code{2}: show headers and bodies
\item \code{3}: show headers, bodies, and curl status messages.
}

Use \code{\link[httr2:with_verbosity]{with_verbosity()}} to control the verbosity of requests that
you can't affect directly.}
}
\value{
\itemize{
\item \code{NULL} if the API response's body is empty.
\item The API response's body as a list if it is of type JSON.
\item The API response's body as a character scalar in all other cases.
}
}
\description{
Performs an API call to a NocoDB server and returns the response as a list if it is of type JSON, otherwise as a character scalar.
}
\details{
See \code{\link[=req_auth]{req_auth()}} for details about the authentication logic enabled via \code{auth}.

For full control over the performed HTTP request, resort to the lower-level \code{\link[=req_basic]{req_basic()}}.
}
\seealso{
Other common functions:
\code{\link{req_auth}()},
\code{\link{req_basic}()}
}
\concept{common}
