% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nocodb.gen.R
\name{sync_data_src_eagerly}
\alias{sync_data_src_eagerly}
\title{Synchronize NocoDB data source schema eagerly}
\usage{
sync_data_src_eagerly(
  id_data_src,
  id_base = base_id(origin = origin, email = email, password = password),
  origin = funky::config_val("origin"),
  email = funky::config_val("email"),
  password = funky::config_val("password"),
  wait_max = 30L,
  wait_resync = 7
)
}
\arguments{
\item{id_data_src}{\code{\link[base:character]{character(1)}}\cr
NocoDB data source identifier as returned by \code{\link[=data_src_id]{data_src_id()}}.}

\item{id_base}{\code{\link[base:character]{character(1)}}\cr
NocoDB base identifier as returned by \code{\link[=base_id]{base_id()}}.}

\item{origin}{\code{\link[base:character]{character(1)}}\cr
NocoDB server \href{https://developer.mozilla.org/docs/Glossary/Origin}{origin}.}

\item{email}{\code{\link[base:character]{character(1)}}\cr
E-mail address of the NocoDB user to authenticate with.}

\item{password}{\code{\link[base:character]{character(1)}}\cr
Password of the NocoDB user to authenticate with.}

\item{wait_max}{\code{\link[base:integer]{integer(1)}}\cr
Maximum time in seconds to wait for schema synchronization to finish. An error is thrown if there are still schema changes pending when the
timeout is reached. An integerish scalar \verb{>= wait_resync}.}

\item{wait_resync}{\code{\link[base:numeric]{numeric(1)}}\cr
Interval in seconds to repeat calling \code{\link[=sync_data_src]{sync_data_src()}}. A number \verb{>= 1} and \verb{<= wait_max}.}
}
\value{
\code{id_data_src}, invisibly.
}
\description{
Synchronizes the specified data source's schema between its external and its NocoDB-internal state by repeatedly calling \code{\link[=sync_data_src]{sync_data_src()}} until
\code{\link[=has_data_src_diff]{has_data_src_diff()}} doesn't detect any more changes.
}
\concept{admin}
\concept{nocodb}
